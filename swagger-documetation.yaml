openapi: 3.0.1
info:
  title: Kvadrakopter project
  version: 3.0.0
servers:
  - url: https://kvadrakopter3.herokuapp.com/api
    description: Generated server url
paths:
  /auth/registration:
    post:
      tags:
        - registration-controller
      operationId: registration
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userName:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserEntity'
  /auth/login:
    post:
      tags:
        - registration-controller
      operationId: loginUserByLoginAndPassword
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userName:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  userName:
                    type: string
                  password:
                    type: string
                  roles:
                    type: array
                    items:
                      $ref: '#/components/schemas/RolesEntity'
                  token:
                    type: string
  /kvadrakopters/admin:
    post:
      tags: 
        - Kvadrokopter-controller
      operationId: saveKvadrakopter
      requestBody:
        content:
          applicatation/json:
            schema:
              $ref: '#/components/schemas/KvadrakopterEntity'
      responses:
        '201':
          description: CREATED
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KvadrakopterEntity'
  /kvadrakopters:
    get:
      tags: 
        - Kvadrokopter-controller
      operationId: getAllKvadrakopters
      responses:
        '200':
          description: CREATED
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KvadrakopterEntity'
  /kvadrakopters/{id}:
    get:
      tags: 
        - Kvadrokopter-controller
      operationId: getKvadrakopterById
      responses:
        '200':
          description: CREATED
          content:
            '*/*':
              schema:
                  $ref: '#/components/schemas/KvadrakopterEntity'
  /users:
    get:
      tags:
        - User-controller
      operationId: getAllUsers
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserEntity'
  /users/{id}:
    get:
      tags:
        - User-controller
      operationId: getUserById
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                  $ref: '#/components/schemas/UserEntity'
  /users/{id}:
    patch:
      tags:
        - User-controller
      operationId: updateUserById
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEntity'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserEntity'
  /users/{id}/admins/role:
    get:
      tags:
        - User-controller
      operationId: userHaveRoleAdmin
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
components:
  schemas:
    RolesEntity:
      type: object
      properties:
        roleName:
          type: string
    UserEntity:
      type: object
      properties:
        id:
          type: integer
        userName:
          type: string
        password:
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RolesEntity'
    KvadrakopterEntity:
      type: object
      properties:
        id: 
          type: integer
        name: 
          type: string
        photoUrl:
          type: string
        videoUrl:
          type: string
        description:
          type: string